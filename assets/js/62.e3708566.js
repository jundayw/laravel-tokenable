(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{376:function(e,v,_){"use strict";_.r(v);var s=_(18),t=Object(s.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[e._v("#")]),e._v(" 介绍")]),e._v(" "),v("h2",{attrs:{id:"访问令牌-access-token"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#访问令牌-access-token"}},[e._v("#")]),e._v(" 访问令牌（Access Token）")]),e._v(" "),v("p",[e._v("它的有效期比较短，一般在15分钟到1小时之间。\n主要用途是访问那些受保护的API资源。\n每次我们向API发起请求的时候，都要在请求头里带上它，格式通常是 "),v("code",[e._v("Authorization: Bearer <token>")]),e._v("。\n因为它的有效期短，就算不小心泄露了，风险也相对没那么大，毕竟很快就会过期失效。")]),e._v(" "),v("h2",{attrs:{id:"刷新令牌-refresh-token"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#刷新令牌-refresh-token"}},[e._v("#")]),e._v(" 刷新令牌（Refresh Token）")]),e._v(" "),v("p",[e._v("它的寿命要长得多，可能是7天、30天，甚至更久。\n它只有一个作用，就是用来获取新的 "),v("code",[e._v("Access Token")]),e._v("。")]),e._v(" "),v("div",{staticClass:"custom-block warning"},[v("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),v("p",[e._v("千万要记住，不能在访问普通API的时候携带它，只有当 "),v("code",[e._v("Access Token")]),e._v(" 过期了，我们调用专门的刷新接口时才会用到它。")])]),e._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),v("p",[e._v("在前端存储 "),v("code",[e._v("Refresh Token")]),e._v(" 的时候，要选择更安全的方式，比如存在 "),v("code",[e._v("localStorage")]),e._v("、"),v("code",[e._v("sessionStorage")]),e._v(" 里， 或者使用更安全的 HttpOnly "),v("code",[e._v("Cookie")]),e._v(" 来存储。")])]),e._v(" "),v("h2",{attrs:{id:"授权码-authorization-code"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#授权码-authorization-code"}},[e._v("#")]),e._v(" 授权码（Authorization Code）")]),e._v(" "),v("p",[e._v("授权码核心用途：")]),e._v(" "),v("ul",[v("li",[e._v("临时授权：用户授权后，第三方应用可以访问用户的信息，比如名称、头像、邮箱等等。")]),e._v(" "),v("li",[e._v("解除账户限制：账户被限制时，可以使用授权码来解除限制。")])]),e._v(" "),v("h2",{attrs:{id:"认证流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#认证流程"}},[e._v("#")]),e._v(" 认证流程")]),e._v(" "),v("img",{attrs:{src:e.$withBase("/assets/zh/auth.svg"),alt:"Create Token"}}),e._v(" "),v("ul",[v("li",[e._v("用户操作：用户在前端输入账号和密码，点击登录；")]),e._v(" "),v("li",[e._v("前端处理：前端把用户输入的凭据发送到后端的登录接口；")]),e._v(" "),v("li",[e._v("后端处理：后端接收到请求后，会验证用户的凭据。如果验证成功，就会生成一个短寿命的 "),v("code",[e._v("Access Token")]),e._v(" 和一个长寿命的 "),v("code",[e._v("Refresh Token")]),e._v("；要是验证失败，就返回错误信息；")]),e._v(" "),v("li",[e._v("返回结果：验证成功后，后端把 "),v("code",[e._v("Access Token")]),e._v(" 和 "),v("code",[e._v("Refresh Token")]),e._v(" 返回给前端；验证失败时，返回 "),v("em",[e._v("401 Unauthorized")]),e._v(" ，前端接收到后显示错误消息；")]),e._v(" "),v("li",[e._v("前端存储：前端接收到 "),v("code",[e._v("Access Token")]),e._v(" 和 "),v("code",[e._v("Refresh Token")]),e._v(" 后，将它们安全地存储起来，登录成功。")])]),e._v(" "),v("h2",{attrs:{id:"访问受保护资源"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#访问受保护资源"}},[e._v("#")]),e._v(" 访问受保护资源")]),e._v(" "),v("ul",[v("li",[e._v("前端请求：前端向需要授权的API发起请求，在请求头里带上 "),v("code",[e._v("Authorization: Bearer <Access Token>")]),e._v("；")]),e._v(" "),v("li",[e._v("后端验证：后端收到请求后，会对 "),v("code",[e._v("Access Token")]),e._v(" 进行验证，主要检查它的签名是否有效、有没有过期，以及权限范围是否符合要求；")]),e._v(" "),v("li",[e._v("返回结果：如果 "),v("code",[e._v("Access Token")]),e._v(" 有效，后端就正常处理请求，返回业务数据，前端接收到数据后正常显示；要是 "),v("code",[e._v("Access Token")]),e._v(" 无效或者过期了，后端会返回 "),v("em",[e._v("401 Unauthorized")]),e._v("。")])]),e._v(" "),v("h2",{attrs:{id:"刷新令牌流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#刷新令牌流程"}},[e._v("#")]),e._v(" 刷新令牌流程")]),e._v(" "),v("img",{attrs:{src:e.$withBase("/assets/zh/refresh.svg"),alt:"Refresh Token"}}),e._v(" "),v("ul",[v("li",[e._v("前端拦截：前端通过配置HTTP响应拦截器来捕获所有的响应。当拦截器捕获到后端返回的 "),v("em",[e._v("401 Unauthorized")]),e._v(" 错误，并且确认是 "),v("code",[e._v("Access Token")]),e._v(" 过期导致的，将当前失败的请求放入失败队列；")]),e._v(" "),v("li",[e._v("检查刷新令牌：拦截器会检查本地是否存储了 "),v("code",[e._v("Refresh Token")]),e._v("。如果有，就向后端特定的刷新接口 "),v("code",[e._v("/api/auth/refresh")]),e._v(" 发送请求，并在请求头里带上 "),v("code",[e._v("Authorization: Bearer <Refresh Token>")]),e._v("；")]),e._v(" "),v("li",[e._v("后端验证：后端接收到刷新请求后，会验证 "),v("code",[e._v("Refresh Token")]),e._v(" 的有效性；")]),e._v(" "),v("li",[e._v("返回结果：如果 "),v("code",[e._v("Refresh Token")]),e._v(" 有效，后端会生成新的 "),v("code",[e._v("Access Token")]),e._v("和 "),v("code",[e._v("Refresh Token")]),e._v("，然后返回给前端；要是 "),v("code",[e._v("Refresh Token")]),e._v(" 无效或过期，后端返回错误（比如401或403 ），前端收到错误后，清除本地存储的所有令牌，然后把用户重定向到登录页面；")]),e._v(" "),v("li",[e._v("重放请求：前端接收到新的令牌后，更新本地存储的令牌，并用新的 "),v("code",[e._v("Access Token")]),e._v(" 重新执行失败队列中的请求。")])])])}),[],!1,null,null,null);v.default=t.exports}}]);